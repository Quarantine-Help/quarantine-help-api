openapi: 3.0.1
info:
  title: QuarantineHelp API Documentation
  description: '
  ## Project Goal
  
  To allow healthy volunteers to help out the quarantined population nearby to get their errands done.

  ## Keywords

  `Crisis` - A crisis we are dealing with. In this case, `COVID-2019` </br>
  `Participant` - A registered user in the system, can be of `HL` (Helper/Volunteer) and `AF` (Affected/Quarantined) type. </br>
  `Request` - An errand created by a `HL` participant. </br>
  `Assignee` - An HL volunteer who is taking care of a Request.

  ## Process

  1.An `AF` participant creates a `Request R` with a description and
  deadline.  <br>
  2.A `HL` participant can list `Requests` needing support in their area.
  They can `assign` it to themselves. </br>
  3.A `HL` participant finishes the errand, and the `AF/HL` participant
  resolves `R`.

  ## Technologies

  We need help, and our technologies right now are:  </br>
  - **Frontend**: Angular, HERE maps. A mobile version is getting ready at [https://mobile.quarantinehelp.space/](https://mobile.quarantinehelp.space/). </br>
  - **Mobile** - Ionic + Capacitor, HERE maps. Code @ [https://github.com/Quarantine-Help/quarantine-hybrid-app](https://github.com/Quarantine-Help/quarantine-hybrid-app) </br>
  - **Backend**: Python-django. You can find the repo here: [https://github.com/Quarantined-Help/quarantined_backend](https://github.com/Quarantined-Help/quarantined_backend). </br>
  - **Design**: We have some initial designs here, thank to our <3 people on our channel [here](https://xd.adobe.com/view/b3bd4031-5959-47e0-4b38-da9e6454d57e-c58c/).

  ## Join US

  Find our projects at
  [Github:Quarantine-Help](https://github.com/Quarantine-Help). </br>
  Join our slack channel: [Slack:Quarantine-Help](https://join.slack.com/t/quarantinedhelp/shared_invite/zt-d0259x7q-BiC_viQhLRoQqqc5j~P0uw). </br></br>

  Remember to wash your hands x=).
  '

  version: "1"
servers:
  - url: https://api.quarantinehelp.space
paths:
  /api/v1/auth/register/:
    post:
      tags:
        - Authentication
      description: Create a new participant. Also acts as the registration API
      summary: Register participant API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantCreateSchema"
            examples:
              "0":
                value:
                  {
	"user": {
		"firstName": "Patient First Test with 6",
		"lastName": "Patient last",
		"email": "patientssss2dsddgfg@patient.com",
		"password": "YEEHA"
	},
	"position": {
		"longitude": "2.7105760574340807",
		"latitude": "48.19827663849882"
	},
	"type": "AF",
	"firstLineOfAddress": "First Line of add",
	"secondLineOfAddress": "Second line",
	"placeId": "ChIJwyyKo7J3X0YRZ5XOMcLx3xo",
	"postCode": "12345",
	"city": "Berlin",
	"country": "DE",
	"crisis": 1,
	"phone": "+46761189391"
}
      responses:
        "201":
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantResponse"
              examples:
                "0":
                  value:
                    {"user":{"firstName":"Patient First Test with 6","lastName":"Patient
                    last","email":"patients@patient.com"},"position":{"longitude":"2.7105760574340807","latitude":"48.19827663849882"},"type":"AF","firstLineOfAddress":"First
                    Line of add","secondLineOfAddress":"Second line","country":"DE","placeId":"ChIJwyyKo7J3X0YRZ5XOMcLx3xo","postCode":"12345","city":"Berlin","phone":"+46761189391","crisis":1}
      servers:
        - url: https://api.quarantinehelp.space
    servers:
      - url: https://api.quarantinehelp.space
  /api/v1/auth/login/:
    post:
      tags:
        - Authentication
      description: Login API
      summary: Participant login API
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginPostBody"
            examples:
              "0":
                value:
                  "{\n\t\"email\": \"01tonythomas@gmail.com\", \n\t\"password\"\
                  : \"tester123\"\n}"
      responses:
        "200":
          description: Response on succeful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse200"
              examples:
                "0":
                  value: |-
                    {
                      "token": "asdfasdfasdfasfd1231231231313",
                      "participantId": 1,
                      "email": "user@gmail.com"
                    }
        "400":
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse400"
              examples:
                "0":
                  value: {"non_field_errors":["Unable to log in with provided credentials."]}
      servers:
        - url: https://api.quarantinehelp.space
    servers:
      - url: https://api.quarantinehelp.space
  /api/v1/crises/{crisisId}/affected-participants/:
    get:
      tags:
        - Map view to list affected participants nearby
      description: Get a list of affected participants
      summary: Get a list of affected participants
      parameters:
        - in: path
          name: crisisId
          schema:
            type: integer
          description: crisis we are dealing with
          example: 7
          required: true
        - in: query
          name: radius
          schema:
            type: integer
          description: Radius around the PoI in KM
          example: 7
          allowEmptyValue: True
        - in: query
          name: latitude
          schema:
            type: string
          description: Latitude of PoI
          example: 48.174307
          allowEmptyValue: True
        - in: query
          name: longitude
          schema:
            type: string
          description: Longitude of PoI
          example: 2.942351
        - in: query
          name: requestType
          schema:
            type: string
            enum:
              - G
              - M
            description: >
              Type of errand:
               * `G` - Grocery request
               * `M` - Medicine request

          description: Filter by request type. G - Groceries, M - Medicines. You can send multiple of this with an &.
          example: G
      responses:
        "200":
          description: Participants list response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffectedParticipantsPaginatedResponse"
              examples:
                "0":
                  value:
                    {"count":2,"next":null,"previous":null,"results":[{"id":2,"user":{"firstName":"Patient
                    First Test with 6","lastName":"Patient last","email":"patients@patient.com"},"position":{"longitude":"2.7105760574340807","latitude":"48.19827663849882"},"requests":[],"deleted":null,"type":"AF","firstLineOfAddress":"First
                    Line of add","secondLineOfAddress":"Second line","country":"DE","placeId":"ChIJwyyKo7J3X0YRZ5XOMcLx3xo","postCode":"12345","city":"Berlin","phone":"+46761189391","metadata":{},"createdAt":"2020-03-29T15:35:53.248762Z","crisis":1},{"id":1,"user":{"firstName":"Tony","lastName":"Thomas","email":"01tonythomas@gmail.com"},"position":{"longitude":"19.057331085205075","latitude":"59.69310986700436"},"requests":[{"type":"G","deadline":"2020-03-29T11:25:31Z","description":"I
                    need the following: \r\n1. Smor","assignee":null, "status":"P", "id": 1, "assignmentHistory": []}],"deleted":null,"type":"AF","firstLineOfAddress":"Cedergrensvägen
                    1","secondLineOfAddress":"SE-126 36 Hägersten","country":"SE","placeId":"Yz1idWlsZGluZztsYXQ9NTkuMzAzNDY7bG9uPTE4LjAwMzI0O249Q2VkZXJncmVuc3YlQzMlQTRnZW4rMTtoPTcyNDMzYQ","postCode":"12636","city":"Stockholm","phone":"+46761189391","metadata":{},"createdAt":"2020-03-29T11:23:36.862282Z","crisis":1}]}
      servers:
        - url: https://api.quarantinehelp.space
    servers:
      - url: https://api.quarantinehelp.space
  /api/v1/crises/:
    get:
      tags:
        - Map view to list affected participants nearby
      description: List crisises in your area
      summary: Listing all crises. Done while page load.
      responses:
        "200":
          description: Used to generate some pre-losfrf information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CrisesPaginatedResponse"
              examples:
                "0":
                  value: {
  "count": 1,
  "next": null,
  "previous": null,
  "results": [
    {
      "id": 1,
      "deleted": null,
      "name": "COVID_19",
      "active": true,
      "startedAt": "2020-03-29T10:38:38Z"
    }
  ]
}
      servers:
        - url: https://api.quarantinehelp.space
    servers:
      - url: https://api.quarantinehelp.space

  /api/v1/me/:
    get:
      tags:
        - My profile management
      description: Get my profile data
      summary: Get my profile data
      security:
      - bearerAuth: []
      responses:
        "200":
          description: My profile data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantResponse"
              examples:
                "0":
                  value: {
                        "id": 4,
                        "user": {
                          "firstName": "Helper",
                          "lastName": "Participant",
                          "email": "helperparticipant@test.com"
                        },
                        "position": {
                          "longitude": "15.466003417968743",
                          "latitude": "60.78531111116974"
                        },
                        "type": "HL",
                        "firstLineOfAddress": "asdf",
                        "secondLineOfAddress": "asdf",
                        "country": "SE",
                        "placeId": "asdfa",
                        "postCode": "12648",
                        "city": "Berlin",
                        "phone": "+46761189391"
                      }
    patch:
      tags:
        - My profile management
      description: Update my profile data
      summary: Update my profile data. See that you cannot update the Email
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParticipantPatchBody"
            examples:
              "0":
                value: {
  "user": {
    "firstName": "Helper A",
    "lastName": "Participant Last HAHAH"
  },
  "position": {
    "longitude": "16.466003417968743",
    "latitude": "63.78531111116974"
  },
  "type": "HL",
  "firstLineOfAddress": "Hallo Hallo",
  "secondLineOfAddress": "Hey do",
  "country": "DE",
  "placeId": "asdfa",
  "postCode": "12345",
  "city": "Berlin",
  "phone": "+46761189399"
}
      responses:
        "200":
          description: My profile data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestsPaginatedResponse"
              examples:
                "0":
                  value: {
                        "id": 4,
                        "user": {
                          "firstName": "Helper",
                          "lastName": "Participant",
                          "email": "helperparticipant@test.com"
                        },
                        "position": {
                          "longitude": "15.466003417968743",
                          "latitude": "60.78531111116974"
                        },
                        "type": "HL",
                        "firstLineOfAddress": "asdf",
                        "secondLineOfAddress": "asdf",
                        "country": "SE",
                        "placeId": "asdfa",
                        "postCode": "12648",
                        "city": "Berlin",
                        "phone": "+46761189391"
                      }


  /api/v1/me/requests/:
    get:
      tags:
        - My requests management for an AF Participant
      description: Get requests created by an AF participant
      summary: Get requests created by an AF participant
      security:
      - bearerAuth: []
      responses:
        "200":
          description: A paginated list of user requests.
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RequestsPaginatedResponse"
                examples:
                  "0":
                    value: {
                      "count": 3,
                      "next": null,
                      "previous": null,
                      "results": [
    {
      "id": 9,
      "type": "G",
      "deadline": "2020-05-29T00:01:01Z",
      "description": "Want 3 Kg bananaasdfasdf",
      "assignee": {
        "firstName": "Helper",
        "lastName": "Participant",
        "email": "helperparticipant@test.com"
      },
      "status": "C",
      "assignmentHistory": [
        {
          "status": "A",
          "id": 2,
          "createdAt": "2020-04-01T18:27:43Z",
          "didComplete": false
        }
      ]
    },
                        {
                          "type": "G",
                          "deadline": "2020-05-28T22:01:01Z",
                          "description": "Want 3 Kg banana",
                          "assignee": null,
                          "status": "P",
                                "id": 10,
                              "assignmentHistory": []
                        },
                        {
                          "type": "G",
                          "deadline": "2020-05-29T00:01:01Z",
                          "description": "Want 3 Kg banana",
                          "assignee": null,
                          "status": "P",
                          "assignmentHistory": [],

                                "id": 11,
                        }
                      ]
                    }
    post:
      tags:
        - My requests management for an AF Participant
      description: Create request as an AF participant
      summary: Create request as an AF participant
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateBody"
            examples:
              "0":
                value:
                  {
                  "type": "G",
                  "description": "Want 3 Kg banana",
                  "deadline": "2020-05-29T01:01:01+01:00"
              }
      responses:
        "201":
          description: The created request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantRequestSchema"
              examples:
                "0":
                  value: {
                                 "id": 10,
  "type": "G",
  "deadline": "2020-05-29T00:01:01Z",
  "description": "Want 3 Kg banana",
  "assignee": null,
  "status": "P",
    "assignmentHistory": []
}

  /api/v1/me/requests/{requestId}/:
    patch:
      tags:
        - My requests management for an AF Participant
      description: Update my request. See that you might not be able to update your request after it is already in the transit/finished/cancelled state. You might want to delete it and create another.
      summary: Partial update on my request
      security:
      - bearerAuth: []
      parameters:
        - in: path
          name: requestId
          schema:
            type: integer
          description: Request id
          example: 7
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPatchBody"
            examples:
              "0":
                value:
                  {
                  "type": "G",
                  "description": "Want 3 Kg banana",
                  "deadline": "2020-05-29T01:01:01+01:00",
                  "status": "C"
              }
      responses:
        "200":
          description: The updated request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantRequestSchema"
              examples:
                "0":
                  value: {
                    "id": 10,
  "type": "G",
  "deadline": "2020-05-29T00:01:01Z",
  "description": "Want 3 Kg banana",
  "assignee": null,
  "status": "P",
  "assignmentHistory": []
}
    delete:
      tags:
        - My requests management for an AF Participant
      description: Delete a request. Will set the status to "C". Also returns the modified request object.
      summary: Delete on my request
      security:
      - bearerAuth: []
      parameters:
        - in: path
          name: requestId
          schema:
            type: integer
          description: Request id
          example: 7
          required: true
      responses:
        "200":
          description: The request with status set to C
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantRequestSchema"
              examples:
                "0":
                  value: {
                         "id": 10,
                        "type": "C",
                        "deadline": "2020-05-29T00:01:01Z",
                        "description": "Want 3 Kg banana",
                        "assignee": null,
                        "status": "C",
                        "assignmentHistory": [],
                        "createdAt": "2020-03-31T16:54:16.421078Z"
                  }

  /api/v1/crises/{crisisId}/affected-participants/{participantId}/requests/:
    get:
      parameters:
      - in: path
        name: crisisId
        schema:
          type: integer
        description: crisis we are dealing with
        example: 7
        required: true
      - in: path
        name: participantId
        schema:
          type: integer
        description: affected participant id
        example: 3
        required: true
      tags:
        - Explore and assign requests as a HL participant
      description: Get requests created by this
      summary: Get requests created by an AF participant

      security:
      - bearerAuth: []
      responses:
        "200":
          description: A paginated list of AF requests.
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RequestsPaginatedResponse"
                examples:
                  "0":
                    value: {
  "count": 6,
  "next": null,
  "previous": null,
  "results": [
    {
      "id": 14,
      "type": "G",
      "deadline": "2020-05-28T22:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": null,
      "status": "P",
      "assignmentHistory": [],
      "createdAt": "2020-03-31T16:54:16.421078Z"
    },
    {
      "id": 15,
      "type": "G",
      "deadline": "2020-05-29T00:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": null,
      "status": "P",
      "assignmentHistory": [],
      "createdAt": "2020-03-31T16:54:19.367445Z"
    },
    {
      "id": 16,
      "type": "G",
      "deadline": "2020-05-29T00:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": null,
      "status": "P",
      "assignmentHistory": [],
      "createdAt": "2020-04-04T10:43:18.521097Z"
    },
    {
      "id": 17,
      "type": "G",
      "deadline": "2020-05-29T00:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": null,
      "status": "P",
      "assignmentHistory": [],
      "createdAt": "2020-04-04T10:43:24.914212Z"
    },
    {
      "id": 18,
      "type": "G",
      "deadline": "2020-05-29T00:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": null,
      "status": "P",
      "assignmentHistory": [],
      "createdAt": "2020-04-04T10:43:25.697312Z"
    },
    {
      "id": 13,
      "type": "G",
      "deadline": "2020-05-28T23:01:01Z",
      "description": "Want 3 Kg banana",
      "assignee": {
        "firstName": "Helper",
        "lastName": "Participant",
        "email": "helperparticipant@test.com"
      },
      "status": "T",
      "assignmentHistory": [
        {
          "status": "A",
          "id": 4,
          "createdAt": "2020-04-04T11:12:46.570496Z",
          "didComplete": false
        }
      ],
      "createdAt": "2020-03-31T16:54:09.631443Z"
    }
  ]
}
  /api/v1/crises/{crisisId}/affected-participants/{participantId}/requests/{requestId}/assign/:
    post:
      parameters:
        - in: path
          name: crisisId
          schema:
            type: integer
          description: crisis we are dealing with
          example: 7
          required: true
        - in: path
          name: participantId
          schema:
            type: integer
          description: affected participant id
          example: 3
          required: true
        - in: path
          name: requestId
          schema:
            type: integer
          description: request created by an AF participant
          example: 13
          required: true
      tags:
       - Explore and assign requests as a HL participant
      description: As an HL participant, assign a request created by an AF Participant.
      summary: Assign a request as an HL Participant. An empty POST would assign the task to the requesting HL participant.
      security:
      - bearerAuth: []
      responses:
        "201":
          description: The request with status changing from `P` to `T` since it was assigned to the requesting HL participant.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParticipantRequestSchema"
              examples:
                "0":
                  value: {
  "id": 16,
  "type": "G",
  "deadline": "2020-05-29T00:01:01Z",
  "description": "Want 3 Kg banana",
  "assignee": {
    "firstName": "Helper",
    "lastName": "Participant",
    "email": "helperparticipant@test.com"
  },
  "status": "T",
  "assignmentHistory": [
    {
      "status": "A",
      "id": 7,
      "createdAt": "2020-04-04T11:17:37.784674Z",
      "didComplete": false
    }
  ],
  "createdAt": "2020-04-04T10:43:18.521097Z"
}

components:
  securitySchemes:
    bearerAuth:
      in: header
      type: apiKey
      name: Authorization
      description: "We need in format Authorization: Token AVFSADFSDFSDFSDF"

  schemas:
    ParticipantPatchBody:
      type: object
      properties:
        crisis:
          type: integer
          example: 1
        city:
          type: string
          example: Stockholm
        phone:
          type: string
          example: +46777777777
        firstLineOfAddress:
          type: string
          example: Cedergsvagen 38
        secondLineOfAddress:
          type: string
        country:
          type: string
          example: DE
        postCode:
          type: string
          example: 12207
        position:
          $ref: "#/components/schemas/Position"
        placeId:
          type: string
        type:
          type: string
          example: AF
          enum:
            - HL
            - AF
            - AU
            - TP
          description: >
            Type of participant:
             * `HL` - Helper
             * `AF` - Affected Participant (Quarantined)
             * `AU` - Authorities
             * `TP` - Third party
        user:
          $ref: "#/components/schemas/UserPatchBody"

    RequestCreateBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - G
            - M
          description: >
            Type of errand:
             * `G` - Grocery request
             * `M` - Medicine request
        deadline:
          type: string
          description: Deadline to finish this with timezone
          example: "2020-03-29T11:25:31+01:00"
        description:
          type: string
          description: Description of this request
    RequestPatchBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - G
            - M
          description: >
            Type of errand:
             * `G` - Grocery request
             * `M` - Medicine request
        deadline:
          type: string
          description: Deadline to finish this with timezone
          example: "2020-03-29T11:25:31+01:00"
        description:
          type: string
          description: Description of this request
        status:
          type: string
          enum:
            - P
            - T
            - F
            - C
          description: >
            Status of the errand:
             * `P` - Pending, just created
             * `T` - Transit, a helper is working on it
             * `F` - Finished job (wont be returned on map view)
             * `C` - Cancelled (wont be returned on map view)

    RequestsPaginatedResponse:
      type: object
      properties:
        next:
          type: string
          example: "https://api.quarantinehelp.space/api/v1/me/requests/?page=5"
        previous:
          type: string
          example: "https://api.quarantinehelp.space/api/v1/me/requests/?page=4"
        count:
          type: integer
          example: 100
        results:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantRequestSchema"

    Crisis:
      type: object
      properties:
        name:
          type: string
        active:
          type: boolean
        startedAt:
          type: string
        id:
          type: integer
    Position:
      type: object
      properties:
        latitude:
          type: string
          example: 48.174307
        longitude:
          type: string
          example: 2.174307
    UserPatchBody:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    User:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string

    UserCreateSchema:
      allOf:
        - $ref: "#/components/schemas/User"
      properties:
        password:
          type: string
    ParticipantCreateSchema:
      type: object
      properties:
        crisis:
          type: integer
          example: 1
        city:
          type: string
          example: Stockholm
        phone:
          type: string
          example: +46777777777
        firstLineOfAddress:
          type: string
          example: Cedergsvagen 38
        secondLineOfAddress:
          type: string
        country:
          type: string
          example: DE
        postCode:
          type: string
          example: 12207
        position:
          $ref: "#/components/schemas/Position"
        placeId:
          type: string
        type:
          type: string
          example: AF
          enum:
            - HL
            - AF
            - AU
            - TP
          description: >
            Type of participant:
             * `HL` - Helper
             * `AF` - Affected Participant (Quarantined)
             * `AU` - Authorities
             * `TP` - Third party
        user:
          $ref: "#/components/schemas/UserCreateSchema"

    ParticipantRequestSchema:
      type: object
      properties:
        id:
          type: number
          example: 1
        status:
          type: string
          enum:
            - P
            - T
            - F
            - C
          description: >
            Status of the errand:
             * `P` - Pending, just created
             * `T` - Transit, a helper is working on it
             * `F` - Finished job (wont be returned on map view)
             * `C` - Cancelled (wont be returned on map view)
        type:
          type: string
          enum:
            - G
            - M
          description: >
            Type of errand:
             * `G` - Grocery request
             * `M` - Medicine request
        deadline:
          type: string
          description: Deadline to finish this in UTC
          example: "2020-03-29T11:25:31Z"
        description:
          type: string
          description: Description of this request
        assignee:
          allOf:
            - description: Can be empty when nobody is assigned
            - $ref: "#/components/schemas/User"
        assignmentHistory:
          description: Can be empty for non-assigned request
          type: array
          items:
            $ref: "#/components/schemas/AssignmentSchema"
        createdAt: 
          description: DateTime in utc when the request was created
          type: string
          example: "2020-04-04T10:43:18.521097Z"

    AssignmentSchema:
      type: object
      properties:
        status:
          type: string
          enum:
            - A
            - D
            - C
          description: >
            status of assignment now
             * `A` - Assigned
             * `D` - Dropped
             * `C` - Completed
        id:
          type: number
          example: 1 
        didComplete: 
          type: boolean
          description: Shows if the assignment was succesfull. 
          example: False
        createdAt:
          type: string
          description: datetime in UTC at which this assignment was made
          example: "2020-04-04T11:17:37.784674Z"
    AffectedParticipant:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantRequestSchema"
      allOf:
        - $ref: "#/components/schemas/ParticipantResponse"
    ParticipantResponse:
      type: object
      properties:
        id:
          type: number
          example: 1
        firstLineOfAddress:
          type: string
        country:
          type: string
        crisis:
          type: integer
        city:
          type: string
        phone:
          type: string
        placeId:
          type: string
        postCode:
          type: string
        position:
          $ref: "#/components/schemas/ParticipantResponse_position"
        type:
          type: string
        user:
          $ref: "#/components/schemas/ParticipantResponse_user"
        secondLineOfAddress:
          type: string
    AffectedParticipantsPaginatedResponse:
      type: object
      properties:
        next:
          type: string
          example: "https://api.quarantinehelp.space/api/v1/crises/1/affected-participants/?page=5"
        previous:
          type: string
          example: "https://api.quarantinehelp.space/api/v1/crises/1/affected-participants/?page=4"
        count:
          type: integer
          example: 100
        results:
          type: array
          items:
            $ref: "#/components/schemas/AffectedParticipant"
    CrisesPaginatedResponse:
      type: object
      properties:
        next: {}
        previous: {}
        count:
          type: integer
        results:
          type: array
          items:
            $ref: "#/components/schemas/Crisis"
    LoginPostBody:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    LoginResponse200:
      type: object
      properties:
        token:
          type: string
          example: asdfasdfasdfasfd1231231231313
        participantId:
          type: number
          example: 1
        email:
          type: string
          example: user@example.com
    LoginResponse400:
      type: object
      properties:
        non_field_errors:
          type: array
          items:
            type: string
    ParticipantResponse_position:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
    ParticipantResponse_user:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
